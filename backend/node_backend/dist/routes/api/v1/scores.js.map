{"version":3,"sources":["../../../../src/routes/api/v1/scores.ts"],"names":[],"mappings":";;;;;;;AAAA;;AACA;;AACA,MAAM,MAAM,GAAG,sBAAf,C,CAEA;;AAEA;;AACA,MAAM,CAAC,GAAP,CAAW,GAAX,EAAgB,OAAO,OAAP,EAAgB,QAAhB,EAA0B,IAA1B,KAAmC;AAC/C,EAAA,QAAQ,CAAC,IAAT,CAAc,kBAAd;AAEA,MAAI;AAAE,IAAA;AAAF,MAAY,OAAO,CAAC,KAAxB;AACA,MAAI,KAAK,KAAK,SAAd,EAAyB,KAAK,GAAG,EAAR;AAEzB,QAAM,MAAM,GAAG,MAAM,eAAO,IAAP,GAAc,KAAd,CAAoB,KAApB,CAArB;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,MAAd;AAEA,EAAA,QAAQ,CAAC,GAAT;AACH,CAVD;AAYA,MAAM,CAAC,GAAP,CAAW,MAAX,EAAmB,OAAO,OAAP,EAAgB,QAAhB,KAA6B;AAC5C,QAAM,eAAO,SAAP,CAAiB;AAAE,IAAA,GAAG,EAAE,OAAO,CAAC,MAAR,CAAe;AAAtB,GAAjB,EACF;AAAE,IAAA,IAAI,EAAE,OAAO,CAAC;AAAhB,GADE,CAAN;AAEA,EAAA,QAAQ,CAAC,IAAT,CAAc,kBAAd;AACA,EAAA,QAAQ,CAAC,GAAT,CAAa,EAAb;AACH,CALD;AAOA,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,OAAO,OAAP,EAAgB,QAAhB,KAA6B;AAC/C,EAAA,QAAQ,CAAC,IAAT,CAAc,kBAAd;AACA,QAAM,eAAO,SAAP,CAAiB;AAAE,IAAA,GAAG,EAAE,OAAO,CAAC,MAAR,CAAe;AAAtB,GAAjB,CAAN;AACA,EAAA,QAAQ,CAAC,GAAT,CAAa,EAAb;AACH,CAJD;AAMA,MAAM,CAAC,IAAP,CAAY,MAAZ,EAAoB,OAAO,OAAP,EAAgB,QAAhB,KAA6B;AAC7C,EAAA,OAAO,CAAC,GAAR,CAAY,OAAO,CAAC,IAApB;AACA,EAAA,OAAO,CAAC,GAAR,CAAY,OAAO,OAAO,CAAC,IAA3B;AACA,EAAA,QAAQ,CAAC,IAAT,CAAc,kBAAd;AACA,QAAM,eAAO,UAAP,CAAkB,IAAI,CAAC,KAAL,CAAW,OAAO,CAAC,IAAnB,CAAlB,CAAN;AACA,EAAA,QAAQ,CAAC,GAAT,CAAa,EAAb,EAL6C,CAM7C;AACH,CAPD;eAUe,M","file":"scores.js","sourcesContent":["import { Router } from \"express\";\nimport { scores } from \"./db_models/scores\";\nconst router = Router();\n\n// TODO: IMPORTANT Make server and frontent request code PRISTINE. Each and every project you make is going to rely on this sould project.\n\n/** URL Format: /scores?limit=10*/\nrouter.get(\"/\", async (request, response, next) => {\n    response.type(\"application/json\");\n\n    let { limit } = request.query;\n    if (limit === undefined) limit = 20;\n\n    const result = await scores.find().limit(limit);\n    response.send(result);\n\n    response.end();\n});\n\nrouter.put(\"/:id\", async (request, response) => {\n    await scores.updateOne({ _id: request.params.id },\n        { $set: request.body });\n    response.type(\"application/json\");\n    response.end(\"\");\n});\n\nrouter.delete(\"/:id\", async (request, response) => {\n    response.type(\"application/json\");\n    await scores.deleteOne({ _id: request.params.id });\n    response.end(\"\");\n});\n\nrouter.post(\"/add\", async (request, response) => {\n    console.log(request.body);\n    console.log(typeof request.body);\n    response.type(\"application/json\");\n    await scores.insertMany(JSON.parse(request.body));\n    response.end(\"\");\n    //\n});\n\n\nexport default router;\n"]}